# 🐍 Python 대표 웹 프레임워크 3가지 비교

Python으로 웹 애플리케이션을 만들 때 많이 사용되는 대표적인 웹 프레임워크 3가지를 소개합니다.

---

## 1. Flask

- **타입**: 마이크로 프레임워크
- **특징**:
  - 작고 가볍고 빠름
  - 초보자에게 적합
  - 필요한 기능만 골라서 확장 가능
  - REST API 서버 개발에 강점
- **사용 예시**: 개인 프로젝트, 스타트업 MVP, 빠른 프로토타입

---

## 2. Django

- **타입**: 풀스택 프레임워크
- **특징**:
  - "배터리 포함(batteries-included)" 철학: 대부분 기능 내장
  - ORM, 인증, 관리자 페이지 등 기본 제공
  - 대규모 서비스 개발에 적합
  - 구조화된 방식으로 개발
- **사용 예시**: 대형 웹사이트, 뉴스/블로그 플랫폼, 전자상거래 서비스

---

## 3. FastAPI

- **타입**: 비동기 API 중심 프레임워크
- **특징**:
  - 매우 빠른 성능 (Starlette 기반)
  - Python 타입 힌트를 적극 활용 (자동 문서화 지원)
  - 비동기 프로그래밍(Async) 지원
  - API 서버 구축에 최적화
- **사용 예시**: 고성능 REST API, 머신러닝 백엔드 서버, 마이크로서비스

---

## 📌 요약 비교

| 프레임워크 | 규모      | 성능   | 학습 난이도 | 특징                         |
|------------|-----------|--------|--------------|------------------------------|
| Flask      | 작음      | 보통   | 쉬움         | 유연하고 가볍다              |
| Django     | 큼        | 보통   | 중간~어려움  | 기능이 풍부하고 일관성 높음 |
| FastAPI    | 중간~큼   | 매우 빠름 | 중간         | 타입 기반, 자동 문서화 강점 |